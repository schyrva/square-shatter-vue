// Common component styles
@use 'variables' as vars;
@use 'mixins' as mix;

// Cards
.card {
  padding: vars.spacing('md');
  border-radius: vars.radius('md');
  box-shadow: vars.shadow('sm');
  background-color: rgba(255, 255, 255, 0.85);
  backdrop-filter: blur(10px);
  transition:
    transform vars.transition('fast'),
    box-shadow vars.transition('fast');

  &:hover {
    transform: translateY(-5px);
    box-shadow: vars.shadow('lg');
  }
}

// Buttons
.btn {
  border-radius: vars.radius('md');
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: vars.color('primary');
  color: white;
  cursor: pointer;
  transition: all vars.transition('fast');

  &:hover {
    opacity: 0.9;
    transform: translateY(-2px);
  }

  &:focus,
  &:focus-visible {
    outline: 2px solid vars.color('focus');
    outline-offset: 2px;
  }
}

// Containers
.container {
  @include mix.container;

  @include mix.breakpoint-down('md') {
    padding: 0 vars.spacing('sm');
  }
}

// Flex utilities
.flex {
  display: flex;

  &-col {
    flex-direction: column;
  }
}

.items {
  &-center {
    align-items: center;
  }
}

.justify {
  &-between {
    justify-content: space-between;
  }

  &-center {
    justify-content: center;
  }
}

.flex-wrap {
  flex-wrap: wrap;
}

// Gap utilities
.gap {
  &-sm {
    gap: vars.spacing('sm');
  }

  &-md {
    gap: vars.spacing('md');
  }

  &-lg {
    gap: vars.spacing('lg');
  }
}
